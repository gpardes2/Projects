#! /bin/bash

# Set error handling to exit the script immediately if a command fails
set -e

# Function to check and create sprint service instance
check_and_create_spring_service_instance() {
    # Check if Azure Spring Apps service exists
    if ! az spring show --name $SPRING_APPS_SERVICE --resource-group $RESOURCE_GROUP &>/dev/null; then
        logger "INFO" "Creating Azure Spring Apps service: $SPRING_APPS_SERVICE"

        create_spring_inst="az spring create --name $SPRING_APPS_SERVICE --resource-group $RESOURCE_GROUP --location $LOCATION  \
                            --sku ${WEBSERVICE_SKU} --zone-redundant ${WEBSERVICE_ZONE_REDUNDANT} --vnet ${VNET_NAME} \
                            --app-network-resource-group ${RESOURCE_GROUP} --infra-resource-group ${WEBSERVICE_INFRA_RESOURCE_GROUP} \
                            --app-subnet ${WEBSERVICE_SUBNET_NAME} --service-runtime-subnet ${WEBSERVICE_RUNTIME_SUBNET_NAME}"

        if [[ $ENABLE_APP_INSIGHTS == "true" ]]; then
            create_spring_inst="$create_spring_inst --app-insights $APP_INSIGHT_NAME --sampling-rate $APP_INSIGHT_SAMPLING_RATE"
        else
            create_spring_inst="$create_spring_inst --disable-app-insights true"
        fi

        eval "$create_spring_inst"

        if [ $? -ne 0 ]; then
            logger "ERROR" "Failed to create Azure Spring Apps service"
            exit 1
        fi

        logger "INFO" "Azure Spring Apps service created successfully: $SPRING_APPS_SERVICE"

    else
        logger "DEBUG" "Azure Spring Apps service $SPRING_APPS_SERVICE already exists"
    fi
}

# Function to check and create spring app instance
check_and_create_spring_app_instance() {
    # Check if the Spring Boot app exists
    if ! az spring app show --name $SPRING_APP_NAME --service $SPRING_APPS_SERVICE --resource-group $RESOURCE_GROUP &>/dev/null; then
        logger "INFO" "Creating Spring Boot app: $SPRING_APP_NAME"
        create_spring_app="az spring app create --name $SPRING_APP_NAME --service $SPRING_APPS_SERVICE --resource-group $RESOURCE_GROUP \
                            --runtime-version $SPRING_APP_RUNTIME_VERSION --assign-endpoint  true --assign-public-endpoint $SPRING_APP_PUBLIC_ENDPOINT \
                            --cpu $SPRING_APP_CPU --memory $SPRING_APP_MEMORY --instance-count $SPRING_APP_INSTANCE_COUNT \
                            --min-replicas $SPRING_APP_MIN_REPLICAS --max-replicas $SPRING_APP_MAX_REPLICAS --deployment-name $SPRING_APP_DEPLOYMENT_NAME \
                            --disable-probe $SPRING_APP_DISABLE_PROBE --enable-liveness-probe $SPRING_APP_ENABLE_LIVNESS_PROBE \
                            --enable-readiness-probe $SPRING_APP_ENABLE_READINESS_PROBE --enable-startup-probe $SPRING_APP_ENABLE_STARTUP_PROBE \
                            --enable-persistent-storage true"

        eval "$create_spring_app"

        if [ $? -ne 0 ]; then
            logger "ERROR" "Failed to create Spring Boot app"
            exit 1
        fi
        logger "INFO" "Spring Boot app created successfully: $SPRING_APP_NAME"
    else
        logger "DEBUG" "Spring Boot app $SPRING_APP_NAME already exists"
    fi
}

# Function to Integrate Azure Web App with VNet
integrate_webapp_with_vnet() {
    local resource_group=$RESOURCE_GROUP
    local webapp_name=$WEBAPP_NAME
    local subnet=$WEBSERVICE_SUBNET_NAME
    local vnet=$VNET_NAME

    logger "INFO" "Integrating Web App $webapp_name with VNet Subnet $subnet_id..."
    az webapp vnet-integration add --name $webapp_name \
                                   --resource-group $resource_group \
                                   --subnet $subnet \
                                   --vnet $vnet

    if [ $? -ne 0 ]; then
        logger "ERROR" "Failed to integrate Web App $webapp_name with VNet Subnet $subnet_id."
        exit 1
    fi

    logger "INFO" "Successfully integrated Web App $webapp_name with VNet Subnet $subnet_id."
}

